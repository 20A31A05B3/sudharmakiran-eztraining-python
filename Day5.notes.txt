#RANDOM MODULE
random.sample()
random.shuffle()
random.choice()
random.choices()
random.random()
random.uniform()
>>>import random as r
>>>x="Hello World"
>>>r.sample(x,2)
['l', 'o']
>>>l=[10,20,30,40,50]
>>>r.sample(l,3)
[10, 50, 40]
>>>t=(10,20,30,40,50)
>>>r.sample(t,2)
[50, 30]
>>>s={10,20,30,40,50}
>>>r.sample(s,2)
Traceback (most recent call last):
  File "<pyshell#29>", line 1, in <module>
    r.sample(s,2)
  File "C:\Users\Mouni\AppData\Local\Programs\Python\Python311\Lib\random.py", line 436, in sample
    raise TypeError("Population must be a sequence.  "
TypeError: Population must be a sequence.  For dicts or sets, use sorted(d).

>>>l=[10,20,30,40,50]
>>>r.shuffle(l)
>>>l
[20, 50, 10, 40, 30]
>>>l=['hi','hello']
>>>r.shuffle(l)
>>>t=(1,2,3,4,5)
>>>r.shuffle(t)
Traceback (most recent call last):
  File "<pyshell#62>", line 1, in <module>
    r.shuffle(t)
  File "C:\Users\Mouni\AppData\Local\Programs\Python\Python311\Lib\random.py", line 380, in shuffle
    x[i], x[j] = x[j], x[i]
TypeError: 'tuple' object does not support item assignment    ------>same error for dic and set
>>>l=[10,20,30,40,50]
>>>r.choice(l)
20
>>>t=(1,2,3,4,5)
>>>r.choice(t)
4
>>>s={1,2,3,4,5}
>>>r.choice(s)
Traceback (most recent call last):
  File "<pyshell#65>", line 1, in <module>
    r.choice(s)
  File "C:\Users\Mouni\AppData\Local\Programs\Python\Python311\Lib\random.py", line 371, in choice
    return seq[self._randbelow(len(seq))]
TypeError: 'set' object is not subscriptable       ------>same error for dictionary
>>>l=[10,20,30,40,50]
>>>r.choices(l,k=10)
[50, 50, 10, 50, 20, 30, 40, 50, 40, 10]
>>>s="Hello World"
>>>r.choices(s,k=5)
['d', 'H', 'd', 'l', 'e']
>>>r.random()
0.35094983930782075
>>>r.uniform(1,5)
1.3118645413633714
>>>r.uniform(1,5)
4.391604518186266
-------------------------------------------
#CALENDAR MODULE
calendar.calendar(year)
calendar.calendar(year,month_num)
calendar.setfirstweekday(calendar.MONDAY)

import calendar as c
print("Calendar of the year 2023")
Calendar of the year 2023
print(c.calendar(2023))
                                  2023

      January                   February                   March
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
                   1             1  2  3  4  5             1  2  3  4  5
 2  3  4  5  6  7  8       6  7  8  9 10 11 12       6  7  8  9 10 11 12
 9 10 11 12 13 14 15      13 14 15 16 17 18 19      13 14 15 16 17 18 19
16 17 18 19 20 21 22      20 21 22 23 24 25 26      20 21 22 23 24 25 26
23 24 25 26 27 28 29      27 28                     27 28 29 30 31
30 31

       April                      May                       June
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
                1  2       1  2  3  4  5  6  7                1  2  3  4
 3  4  5  6  7  8  9       8  9 10 11 12 13 14       5  6  7  8  9 10 11
10 11 12 13 14 15 16      15 16 17 18 19 20 21      12 13 14 15 16 17 18
17 18 19 20 21 22 23      22 23 24 25 26 27 28      19 20 21 22 23 24 25
24 25 26 27 28 29 30      29 30 31                  26 27 28 29 30

        July                     August                  September
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
                1  2          1  2  3  4  5  6                   1  2  3
 3  4  5  6  7  8  9       7  8  9 10 11 12 13       4  5  6  7  8  9 10
10 11 12 13 14 15 16      14 15 16 17 18 19 20      11 12 13 14 15 16 17
17 18 19 20 21 22 23      21 22 23 24 25 26 27      18 19 20 21 22 23 24
24 25 26 27 28 29 30      28 29 30 31               25 26 27 28 29 30
31

      October                   November                  December
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
                   1             1  2  3  4  5                   1  2  3
 2  3  4  5  6  7  8       6  7  8  9 10 11 12       4  5  6  7  8  9 10
 9 10 11 12 13 14 15      13 14 15 16 17 18 19      11 12 13 14 15 16 17
16 17 18 19 20 21 22      20 21 22 23 24 25 26      18 19 20 21 22 23 24
23 24 25 26 27 28 29      27 28 29 30               25 26 27 28 29 30 31


print(c.month(2023,10))
    October 2023
Mo Tu We Th Fr Sa Su
                   1
 2  3  4  5  6  7  8
 9 10 11 12 13 14 15
16 17 18 19 20 21 22
23 24 25 26 27 28 29
30 31

print(c.setfirstweekday(c.WEDNESDAY))
None
print(c.calendar(2023))
                                  2023

      January                   February                   March
We Th Fr Sa Su Mo Tu      We Th Fr Sa Su Mo Tu      We Th Fr Sa Su Mo Tu
             1  2  3       1  2  3  4  5  6  7       1  2  3  4  5  6  7
 4  5  6  7  8  9 10       8  9 10 11 12 13 14       8  9 10 11 12 13 14
11 12 13 14 15 16 17      15 16 17 18 19 20 21      15 16 17 18 19 20 21
18 19 20 21 22 23 24      22 23 24 25 26 27 28      22 23 24 25 26 27 28
25 26 27 28 29 30 31                                29 30 31

       April                      May                       June
We Th Fr Sa Su Mo Tu      We Th Fr Sa Su Mo Tu      We Th Fr Sa Su Mo Tu
          1  2  3  4                      1  2          1  2  3  4  5  6
 5  6  7  8  9 10 11       3  4  5  6  7  8  9       7  8  9 10 11 12 13
12 13 14 15 16 17 18      10 11 12 13 14 15 16      14 15 16 17 18 19 20
19 20 21 22 23 24 25      17 18 19 20 21 22 23      21 22 23 24 25 26 27
26 27 28 29 30            24 25 26 27 28 29 30      28 29 30
                          31

        July                     August                  September
We Th Fr Sa Su Mo Tu      We Th Fr Sa Su Mo Tu      We Th Fr Sa Su Mo Tu
          1  2  3  4                         1             1  2  3  4  5
 5  6  7  8  9 10 11       2  3  4  5  6  7  8       6  7  8  9 10 11 12
12 13 14 15 16 17 18       9 10 11 12 13 14 15      13 14 15 16 17 18 19
19 20 21 22 23 24 25      16 17 18 19 20 21 22      20 21 22 23 24 25 26
26 27 28 29 30 31         23 24 25 26 27 28 29      27 28 29 30
                          30 31

      October                   November                  December
We Th Fr Sa Su Mo Tu      We Th Fr Sa Su Mo Tu      We Th Fr Sa Su Mo Tu
             1  2  3       1  2  3  4  5  6  7             1  2  3  4  5
 4  5  6  7  8  9 10       8  9 10 11 12 13 14       6  7  8  9 10 11 12
11 12 13 14 15 16 17      15 16 17 18 19 20 21      13 14 15 16 17 18 19
18 19 20 21 22 23 24      22 23 24 25 26 27 28      20 21 22 23 24 25 26
25 26 27 28 29 30 31      29 30                     27 28 29 30 31

--------------------------------------------------------------------------------
#DATETIME MODULE

variable=datetime.datetime.now() //gives current date and time with milliseconds
variable=variable.strftime("%y") #lower case
variable=variable.strftime("%Y") #upper case
-------->prints year short and long version

>>>import datetime
>>>dt=datetime.datetime.now()
>>>dt
datetime.datetime(2023, 2, 3, 21, 29, 10, 390429)
>>>dt=dt.strftime("%y") #lower case
>>>dt
'23'

---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
#FUNCTIONS
CLASSIFICATIONS:
1.Predefined
2.Userdefined
For code reusability we use functions
Lets say we want to use particular concept multiple times in our prog instead of writing the same code multiple times we can write it once include that inside a function and call the
function whereever we needed
TYPES:
1.Function without argument  without return value
2.without argument  with return value
3.with argument with return value
4.with argument without return value
KEYWORD USED:def
def sample():   #fun definition
    print("GOOD DAY")
    print("HAPPY TIME")
sample()        #fun call
print("TODAY")
sample()
#OUTPUT
GOOD DAY
HAPPY TIME
TODAY
GOOD DAY
HAPPY TIME
-------------------------------------------------------------------------------
#RECURSIVE FUNCTION
A function which calls itself is recursive function
this concept is called recursion

def display():
    n=int(input("Enter a number:"))
    if (n==1):
        display()
    else:
        print("OVER")
display()
------------------------------------------------------------------------------
#Function returns more than 2 values
def add_sub(a,b):
    add=a+b
    sub=a-b
    return add,sub
a,b=list(map(int,input("Enter two numbers:").split(",")))
print(add_sub(a,b))
-----------------------------------------------------------------------------
#Keyword method
def sample(name,age):
    print(name,age)
sample(age=36,name="shaheer")
#OUTPUT
shaheer 36

#Default method
def add(a=100,b=200):
    c=a+b
    print(c)
add(200,200)
add(100)
#OUTPUT
400
300